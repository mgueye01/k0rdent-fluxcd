{{- $fluxValues := dict -}}
{{- $kcmValues := .kcm.values -}}
{{- if has $kcmValues "flux2" -}}
  {{- $fluxValues = $kcmValues.flux2 -}}
{{- end -}}
{{- if eq .gitops.tool "flux" -}}
  {{- $fluxValues = coll.Set "enabled" false $fluxValues -}}
{{- else -}}
  {{- $fluxValues = coll.Set "enabled" true $fluxValues -}}
{{- end -}}
{{- $kcmValues = set "flux2" $fluxValues $kcmValues -}}
{{- if eq .gitops.tool "argo" -}}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kcm
  namespace: {{ .kcm.namespace }}
spec:
  project: default
  source:
    repoURL: {{ .kcm.repository }}
    targetRevision: {{ .kcm.version }}
    chart: {{ .kcm.chart }}
    helm:
      values: |
{{ $kcmValues | toYAML | strings.Indent 8 }}
  destination:
    name: "in-cluster"
    namespace: {{ .kcm.namespace }}
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
{{ else if eq .gitops.tool "flux" -}}
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: OCIRepository
metadata:
  name: kcm
  namespace: {{ .kcm.namespace }}
spec:
  interval: 5m0s
  url: {{ .kcm.repository }}/{{ .kcm.chart }}
  ref:
    tag: {{ .kcm.version }}
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kcm
  namespace: {{ .kcm.namespace }}
spec:
  chartRef:
    kind: OCIRepository
    name: kcm
    namespace: {{ .kcm.namespace }}
  interval: 10m
  values:
{{ $kcmValues | toYAML | strings.Indent 4 }}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-kcm-controller-interaction
  namespace: {{ .gitops.flux.namespace }}
spec:
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          app.kubernetes.io/instance: kcm-system
      podSelector:
        matchLabels:
          app.kubernetes.io/instance: kcm
    ports:
    - port: http
  podSelector:
    matchLabels:
      app: source-controller
  policyTypes:
  - Ingress
  {{ else }}
  {{- fail "Unrecognized value for '.gitops.tool'. Allowed values are 'flux' and 'argo'" }}
  {{ end}}
