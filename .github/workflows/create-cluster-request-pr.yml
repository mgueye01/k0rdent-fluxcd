name: Create PR from Cluster Request Issue

on:
  issues:
    types: [labeled]

jobs:
  create-pr-from-issue:
    # Only run when the 'cluster-request' label is added to an issue
    if: github.event.label.name == 'cluster-request'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.CLUSTER_REQUEST_PAT }}
          
      - name: Set up Git
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          
      - name: Create branch from issue
        id: create_branch
        run: |
          ISSUE_NUMBER="${{ github.event.issue.number }}"
          ISSUE_TITLE="${{ github.event.issue.title }}"
          SANITIZED_TITLE=$(echo "$ISSUE_TITLE" | sed 's/[^a-zA-Z0-9]/-/g' | tr '[:upper:]' '[:lower:]')
          BRANCH_NAME="cluster-request/$ISSUE_NUMBER-$SANITIZED_TITLE"
          
          git checkout -b "$BRANCH_NAME"
          
          # Create a placeholder file to initialize the PR
          mkdir -p .github/placeholder
          echo "This PR is created from issue #$ISSUE_NUMBER" > .github/placeholder/cluster-request-$ISSUE_NUMBER.md
          
          git add .github/placeholder/cluster-request-$ISSUE_NUMBER.md
          git commit -m "Initialize cluster request for issue #$ISSUE_NUMBER"
          git remote set-url origin https://x-access-token:${{ secrets.CLUSTER_REQUEST_PAT }}@github.com/${{ github.repository }}.git
          git push origin "$BRANCH_NAME"
          
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          
      - name: Get issue and write to file
        id: issue_details
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.CLUSTER_REQUEST_PAT }}
          script: |
            const issue = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ github.event.issue.number }}
            });
            
            // Write issue data to files
            const fs = require('fs');
            fs.writeFileSync('issue_title.txt', issue.data.title || "");
            fs.writeFileSync('issue_body.txt', issue.data.body || "");
            
            console.log("Issue data saved to files");
            
      - name: Read issue data
        id: read_issue
        run: |
          ISSUE_TITLE=$(cat issue_title.txt)
          echo "ISSUE_TITLE=$ISSUE_TITLE" >> $GITHUB_ENV
          echo "ISSUE_NUMBER=${{ github.event.issue.number }}" >> $GITHUB_ENV
            
      - name: Create Pull Request
        id: create_pr
        run: |
          # Create the PR using the GitHub CLI
          gh pr create \
            --title "[Cluster Request] ${{ env.ISSUE_TITLE }}" \
            --body-file issue_body.txt \
            --head "${{ env.BRANCH_NAME }}" \
            --base "main" \
            --label "cluster-request"
          
          # Get the PR number from the last created PR
          PR_NUMBER=$(gh pr list --head "${{ env.BRANCH_NAME }}" --json number -q '.[0].number')
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV
          
          # Link the PR to the issue
          gh issue comment ${{ env.ISSUE_NUMBER }} --body "Pull Request #$PR_NUMBER has been created for this cluster request."
          
          # Close the issue
          gh issue close ${{ env.ISSUE_NUMBER }} -c "Tracked by PR #$PR_NUMBER"
        env:
          GH_TOKEN: ${{ secrets.CLUSTER_REQUEST_PAT }} 